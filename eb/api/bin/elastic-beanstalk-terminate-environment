#!/usr/bin/env ruby
###########################################################################
# AWS Elastic Beanstalk Command Line Client
# Copyright 2011 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the “License”). You
# may not use this file except in compliance with the License. A copy of
# the License is located at
#
#    http://aws.amazon.com/apache2.0/
#
# or in the “license” file accompanying this file. This file is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
# ANY KIND, either express or implied. See the License for the specific
# language governing permissions and limitations under the License.
#

require File.join(File.dirname(__FILE__), 'setup.rb')
require 'aws/client/commandline'

AWS::Client::CommandLine.new do |client|
  client.service_call   = lambda { |params| @elasticbeanstalk.terminate_environment(params) }
  client.empty_response = 'Environment not terminated.'
  
  client.option('-e', '--environment-name NAME', 'Name of the environment to terminate') do |env_name|
    client.service_param('EnvironmentName', env_name)
  end

  client.option('-E', '--environment-id ID', 'ID of the environment to terminate') do |env_id|
    client.service_param('EnvironmentId', env_id)
  end

  client.option('-t', '--terminate-resources [TRUE/FALSE]', 'Terminate the environment\'s resources. True if not specified.',                                                                       
                'If false, the resources in this environment will remain running, but AWS Elastic Beanstalk will no longer monitor them.') do |terminate_resources|                   
    if (terminate_resources.nil?)
      terminate_resources = true
    else
      terminate_resources.downcase!
    end
    client.service_param('TerminateResources', terminate_resources)                                                                                                                             
  end
end.run(ARGV)
